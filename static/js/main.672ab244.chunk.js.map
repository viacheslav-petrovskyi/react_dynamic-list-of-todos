{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["Show","TodoList","todos","selectUserId","selctedUser","useState","query","setQuery","showTodos","setShowTodos","visibleTodos","Active","filter","todo","completed","Completed","All","show","title","toLowerCase","includes","className","type","value","onChange","event","target","map","classNames","TodoList__item","checked","readOnly","onClick","userId","id","URL","a","fetch","response","json","CurrentUser","user","setUser","useEffect","getUser","then","name","email","phone","App","selectedUserId","setSelectedUserId","setTodos","getTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.672ab244.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  todos: Todo[],\n  selctedUser: number,\n  selectUserId: (userId: number) => void,\n};\n\nenum Show {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectUserId,\n  selctedUser,\n}) => {\n  const [query, setQuery] = useState('');\n  const [showTodos, setShowTodos] = useState('');\n\n  const show = () => {\n    switch (showTodos) {\n      case Show.Active:\n        return todos.filter(todo => !todo.completed);\n      case Show.Completed:\n        return todos.filter(todo => todo.completed);\n      case Show.All:\n      default:\n        return todos;\n    }\n  };\n\n  const visibleTodos = show()\n    .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <input\n        data-cy=\"filterByTitle\"\n        type=\"text\"\n        value={query}\n        onChange={(event) => {\n          setQuery(event.target.value);\n        }}\n      />\n\n      <select\n        value={showTodos}\n        onChange={(event) => setShowTodos(event.target.value)}\n      >\n        <option value={Show.All}>All</option>\n        <option value={Show.Active}>Active</option>\n        <option value={Show.Completed}>Completed</option>\n      </select>\n\n      <div className=\"TodoList__list-container\">\n        <ul data-cy=\"listOfTodos\" className=\"TodoList__list\">\n          {visibleTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={classNames({\n                TodoList__item: true,\n                'TodoList__item--checked': todo.completed,\n                'TodoList__item--unchecked': !todo.completed,\n              })}\n            >\n              <label>\n                <input\n                  checked={todo.completed}\n                  type=\"checkbox\"\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                data-cy=\"userButton\"\n                onClick={() => {\n                  selectUserId(todo.userId);\n                }}\n                className={classNames({\n                  'TodoList__user-button button': true,\n                  'TodoList__user-button--selected': todo.userId\n                    === selctedUser,\n                })}\n                type=\"button\"\n              >\n                {`User #${todo.userId}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","const URL = 'https://mate.academy/students-api';\n\nexport async function getTodos() {\n  const response = await fetch(`${URL}/todos`);\n\n  return response.json();\n}\n\nexport async function getUser(userId: number) {\n  const response = await fetch(`${URL}/users/${userId}`);\n\n  return response.json();\n}\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number,\n  selectUserId: (userId: number) => void,\n};\n\nexport const CurrentUser: React.FC<Props> = ({ userId, selectUserId }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId).then(setUser);\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${userId}`}</span></h2>\n\n      <h3 data-cy=\"userName\" className=\"CurrentUser__name\">{user?.name}</h3>\n      <p className=\"CurrentUser__email\">{user?.email}</p>\n      <p className=\"CurrentUser__phone\">{user?.phone}</p>\n      <button\n        onClick={() => {\n          selectUserId(0);\n        }}\n        type=\"button\"\n        className=\"CurrentUser__clear button\"\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          selectUserId={setSelectedUserId}\n          selctedUser={selectedUserId}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              selectUserId={setSelectedUserId}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}